READ_ME_FILE 
Abdalla Mohamed 
////// install the dependencies and set up  the MPC main Library /////////////

extract  MAIN_DIRECTORY 
cd lib 
cd libmpc 

sudo ./configure.sh   //  run the configure.sh script with superuser privileges to install the external dependencies 
or configure.sh --disable-test if you do not need the test-suite

sudo ./configure.sh --disable-test
Then, after installing all the dependencies configure and compile the library using CMake. From the folder containing the CMakeLists.txt file compile the library by doing

mkdir build
cd build
cmake ..
make
Finally, install the library with superuser privileges

sudo make install
This will allow you to install the MPC++ library on your system. Using the include
/////////////////////////////////////////////////////////////////////////////////////////////// // if it doesnt work git clone https://github.com/nicolapiccinelli/libmpc
#include <mpc/LMPC.hpp> 


└── main_directory
    └── lib
        └── libmpc
            └── examples

cd MPC_ISA
cd MAIN_DIRECTORY
cd lib
cd libmpc
cd examples
mkdir build && cd build // make a build folder then change directory to build
cmake .. 
make  
cd bin 
ls
./MPC_CHANGING_LANES_VARYING_VELOCITY    or  ./MPC_SOLVER_LANE_CHANGE_CONSTANT_VELOCITY or  ./MPC_solver_trajectory_const_vel    ./ MPC_TRAJECTORY                                                      run any of the four testing scripts 

1) MPC_CHANGING_LANES_VARYING_VELOCITY  -- > the lane changes the lane and varies its velocity doing both longitidunal and lateral control sucessfully 
after solving a csv file : MPC_CHANGING_LANES_VARYING_VELOCITY.csv" is generated in the bin folder ( same folder as the executable) 



2) MPC_SOLVER_LANE_CHANGE_CONSTANT_VELOCITY ---> changes the lane while keeping constant velocity 
a csv file  "MPC_CHANGING_LANES_constant_VELOCITY.csv" containing all the model paramters is generated 

3) MPC_solver_trajectory_const_vel  --> a constant velocity is initialized with a trajectory track of a polynorimal of n = 3 
a csv file is generated "trajectory.csv" . 

4) ./ MPC_TRAJECTORY ----> a trajectory polynoimal control as well as a reference velocity is supplied to the model 
a csv file of all data is generated trajectory.csv


You can plot by the matlibplot scripts supplied within the zip folder . 

:: reference library : https://github.com/nicolapiccinelli/libmpc



// old repo --> contains an obj oriented model and mpc solver implemented using singleon patterns and trying to solve using ipopt solver 
however the ipopt solver must have an HSL lisence ( wasted about 2 days time searching for those ) however it is fully implemented . 





















